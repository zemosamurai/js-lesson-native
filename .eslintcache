[{"D:\\incubator\\js-lesson-native\\src\\index.tsx":"1","D:\\incubator\\js-lesson-native\\src\\lessons\\lesson5\\lesson5.ts":"2","D:\\incubator\\js-lesson-native\\src\\lessons\\lesson4\\lesson_4.ts":"3","D:\\incubator\\js-lesson-native\\src\\lessons\\lesson4\\Lesson4.tsx":"4","D:\\incubator\\js-lesson-native\\src\\App.tsx":"5","D:\\incubator\\js-lesson-native\\src\\lessons\\lesson3\\lesson_3.ts":"6","D:\\incubator\\js-lesson-native\\src\\lessons\\lesson3\\API.ts":"7","D:\\incubator\\js-lesson-native\\src\\lessons\\lesson3\\Lesson3.tsx":"8"},{"size":319,"mtime":1670523882534,"results":"9","hashOfConfig":"10"},{"size":7828,"mtime":1671445024969,"results":"11","hashOfConfig":"10"},{"size":5810,"mtime":1672054085233,"results":"12","hashOfConfig":"10"},{"size":1040,"mtime":1672053984876,"results":"13","hashOfConfig":"10"},{"size":612,"mtime":1672417510467,"results":"14","hashOfConfig":"10"},{"size":763,"mtime":1672493793266,"results":"15","hashOfConfig":"10"},{"size":475,"mtime":1672498157115,"results":"16","hashOfConfig":"10"},{"size":1861,"mtime":1672498331298,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"79go04",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\incubator\\js-lesson-native\\src\\index.tsx",[],"D:\\incubator\\js-lesson-native\\src\\lessons\\lesson5\\lesson5.ts",["36","37"],"D:\\incubator\\js-lesson-native\\src\\lessons\\lesson4\\lesson_4.ts",["38"],"console.log('lesson 4');\r\n\r\n// http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D\r\n// https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n\r\n\r\n// Task 01\r\n// Создайте промис, который постоянно находиться в состоянии pending.\r\n// В конструкторе промиса выведите в консоль сообщение \"Promise is created\".\r\n// const newPromise = new Promise((resolve, reject) =>{})\r\n// console.log(newPromise)\r\n\r\n// Task 02\r\n// Создайте промис, который после создания сразу же переходит в состояние resolve\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\n// const newPromise = new Promise((resolve, reject) =>{\r\n//     resolve('Promise Data')\r\n// })\r\n// newPromise.then((value) => {\r\n//     console.log(value)\r\n// })\r\n\r\n\r\n// Task 03\r\n// Создайте промис, который после создания сразу же переходит в состояние rejected\r\n// и возвращает строку 'Promise Error'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\n// const newPromise = new Promise((resolve, reject) =>{\r\n//     reject(new Error('Promise Error'))\r\n// })\r\n// newPromise.catch((error) => {\r\n//     console.log(error)\r\n// })\r\n\r\n\r\n// Task 04\r\n// Создайте промис, который переходит в состояние resolved через 3с.\r\n// (Используйте setTimeout)\r\n// и возвращает строку 'Promise Data'\r\n// Получите данные промиса и выведите их в консоль\r\n\r\n// const newPromise = new Promise((resolve, reject) =>{\r\n//     setTimeout(() => {resolve('Promise Data')}, 3000)\r\n// })\r\n// newPromise.then((value) => {\r\n//     console.log(value)\r\n// })\r\n\r\n\r\n// Task 05\r\n// Создайте литерал объекта handlePromise со следующими свойствами:\r\n// promise, resolve, reject, onSuccess, onError\r\n// Проинициализируйте первые три свойства null,\r\n// а последние два функциями, которые принимают один параметр и выводят\r\n// в консоль сообщения: первая - `Promise is resolved with data: ${paramName}`\r\n// вторая - `Promise is rejected with error: ${paramName}`\r\n// Создайте три обработчика события click для кнопок \"Create Promise\", \"Resolve Promise\", \"Reject Promise\".\r\n// Первый обработчик, создает промис, заполняет первые три свойства,\r\n// описаного выше объекта: свойство promise получает новый созданный промис,\r\n// свойства resolve и reject получают ссылки на соответствующие функции\r\n// resolve и reject. Следующие два обработчика запускают методы resolve и reject.\r\n\r\n\r\n// Task 06\r\n// Создайте промис, который через 1 с возвращает строку \"My name is\".\r\n// Создайте функцию onSuccess, которая получает один параметр,\r\n// прибавляет к нему Ваше имя и возвращает новую строку из функции\r\n// Создайте функцию print, которая выводит в консоль значение своего параметра\r\n// Добавьте два метода then и передайте созданные функции.\r\n\r\n// const onSuccess = (param: any) => `${param} Kim`\r\n// const print = (param: any) => console.log(param)\r\n//\r\n// const promise = new Promise((resolve, reject) => {\r\n//     setTimeout(() => resolve('My name is'), 1000)\r\n// }).then((value) => {\r\n//     return onSuccess(value)\r\n// }).then((value) => {\r\n//     print(value)\r\n// })\r\n\r\n// Task 7\r\n// Создайте три промиса. Первый промис возвращает объект { name: \"Anna\" } через 2с,\r\n// второй промис возвращает объект {age: 16} через 3 с, а третий {city: ''} через 4с.\r\n// Получите результаты работы промисов, объедините свойства объектов\r\n// и выведите в консоль {name, age, city}\r\n\r\n// const promiseName = new Promise<{ name: string }>((resolve, reject) => {\r\n//     setTimeout(() => resolve({name: \"Anna\"}), 2000)\r\n// })\r\n// const promiseAge = new Promise<{ age: number }>((resolve, reject) => {\r\n//     setTimeout(() => resolve({age: 16}), 3000)\r\n// })\r\n// const promiseCity = new Promise<{ city: string }>((resolve, reject) => {\r\n//     setTimeout(() => resolve({city: ''}), 4000)\r\n// })\r\n//\r\n// let name: string\r\n// promiseName.then((value) => {\r\n//     name = value.name\r\n// })\r\n//\r\n// let age: number\r\n// promiseAge.then((value) => {\r\n//     age = value.age\r\n// })\r\n//\r\n// let city: string\r\n// promiseCity.then((value) => {\r\n//     city = value.city\r\n// }).then(() => {\r\n//     const final = {name, age, city}\r\n//     console.log(final)\r\n// })\r\n\r\n\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};","D:\\incubator\\js-lesson-native\\src\\lessons\\lesson4\\Lesson4.tsx",["39"],"D:\\incubator\\js-lesson-native\\src\\App.tsx",["40","41","42"],"D:\\incubator\\js-lesson-native\\src\\lessons\\lesson3\\lesson_3.ts",["43","44"],"import axios from \"axios\";\r\n\r\nconsole.log('lesson 3');\r\n\r\n// Event loop\r\n// https://learn.javascript.ru/event-loop\r\n// https://habr.com/ru/company/ruvds/blog/340508/\r\n// https://www.youtube.com/watch?v=8aGhZQkoFbQ\r\n// https://www.youtube.com/watch?v=j4_9BZezSUA\r\n// https://www.jsv9000.app/\r\n\r\n// Promise\r\n// https://learn.javascript.ru/promise-basics\r\n// https://www.youtube.com/watch?v=1idOY3C1gYU\r\n\r\n\r\n// https://jsonplaceholder.typicode.com/posts/1\r\n// https://habr.com/ru/company/oleg-bunin/blog/417461/?_ga=2.54695343.543933152.1602500664-1040035071.1596811661\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};\r\n\r\n\r\n//\r\n// axios.get('https://jsonplaceholder.typicode.com/todos/1')\r\n//     .then((value) => {\r\n//         console.log(value)\r\n//     })\r\n//\r\n\r\n\r\n","D:\\incubator\\js-lesson-native\\src\\lessons\\lesson3\\API.ts",[],"D:\\incubator\\js-lesson-native\\src\\lessons\\lesson3\\Lesson3.tsx",[],{"ruleId":"45","severity":1,"message":"46","line":28,"column":6,"nodeType":"47","messageId":"48","endLine":28,"endColumn":17},{"ruleId":"49","severity":1,"message":"50","line":243,"column":1,"nodeType":"51","endLine":243,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":123,"column":1,"nodeType":"51","endLine":124,"endColumn":3},{"ruleId":"45","severity":1,"message":"52","line":7,"column":13,"nodeType":"47","messageId":"48","endLine":7,"endColumn":17},{"ruleId":"45","severity":1,"message":"53","line":3,"column":8,"nodeType":"47","messageId":"48","endLine":3,"endColumn":15},{"ruleId":"45","severity":1,"message":"54","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":15},{"ruleId":"55","severity":2,"message":"56","line":17,"column":14,"nodeType":"57","endLine":17,"endColumn":21},{"ruleId":"45","severity":1,"message":"58","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":22,"column":1,"nodeType":"51","endLine":23,"endColumn":3},"@typescript-eslint/no-unused-vars","'someObjType' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'prom' is assigned a value but never used.","'Lesson1' is defined but never used.","'Lesson3' is defined but never used.","react/jsx-no-undef","'Lesson4' is not defined.","JSXIdentifier","'axios' is defined but never used."]